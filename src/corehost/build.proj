<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <Language>C#</Language>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <SkipCopyBuildProduct>true</SkipCopyBuildProduct>
  </PropertyGroup>
  <!-- Target that builds dotnet, hostfxr and hostpolicy with the same version as what NetCoreApp will be built for
       since the build produced artifacts should always version the same (even if they may not get used).
  -->

  <PropertyGroup>
    <CMakeBuildDir>$(IntermediateOutputRootPath)</CMakeBuildDir>
  </PropertyGroup>

  <PropertyGroup Condition="'$(OSGroup)' != 'Windows_NT'">
    <GenerateVersionSourceFile>true</GenerateVersionSourceFile>
    <NativeVersionSourceFile>$(BaseIntermediateOutputPath)version.cpp</NativeVersionSourceFile>
  </PropertyGroup>

  <Target Name="BuildCoreHostUnix"
          Condition="'$(OSGroup)' != 'Windows_NT'"
          DependsOnTargets="GetLatestCommitHash;GenerateVersionSourceFile">
    <PropertyGroup>
      <CMakeBuildDir>$(CMakeBuildDir)cmake\</CMakeBuildDir>
    
      <BuildArgs>--arch $(TargetArchitecture)</BuildArgs>
      <BuildArgs>$(BuildArgs) --hostver $(HostVersion)</BuildArgs>
      <BuildArgs>$(BuildArgs) --apphostver $(AppHostVersion)</BuildArgs>
      <BuildArgs>$(BuildArgs) --fxrver $(HostResolverVersion)</BuildArgs>
      <BuildArgs>$(BuildArgs) --policyver $(HostPolicyVersion)</BuildArgs>
      <BuildArgs>$(BuildArgs) --commithash $(LatestCommit)</BuildArgs>
      
      
      <BuildArgs Condition="'$(PortableBuild)' == 'true'">$(BuildArgs) -portable</BuildArgs>     
      <BuildArgs Condition="'$(CrossBuild)' == 'true'">$(BuildArgs) --cross</BuildArgs>  
      <BuildArgs Condition="'$(StripSymbols)' == 'true'">$(BuildArgs) --stripsymbols</BuildArgs>   
    </PropertyGroup>

    <CallTarget Targets="CleanCMakeBuildDir" />

    <Message Text="$(MSBuildProjectDirectory)\build.sh $(BuildArgs)" Importance="High"/>
    <Exec Command="$(MSBuildProjectDirectory)\build.sh $(BuildArgs)"
          WorkingDirectory="$(CMakeBuildDir)"/>

    <ItemGroup>
      <CMakeOutput Include="$(CMakeBuildDir)cli\dotnet\dotnet" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\apphost\apphost" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\hostpolicy\$(HostPolicyBaseName)" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\fxr\$(DotnetHostFxrBaseName)" />
    </ItemGroup>
    <ItemGroup Condition="'$(StripSymbols)' == 'true'">
      <CMakeOutput Include="@(CmakeOutput -> '%(Identity)$(SymbolFileExtension)')" />
    </ItemGroup>

    <Copy SourceFiles="@(CMakeOutput)"
          DestinationFolder="$(CoreHostOutputDir)"/>
  </Target>


  <Target Name="BuildCoreHostWindows"
          Condition="'$(OSGroup)' == 'Windows_NT'"
          DependsOnTargets="GetLatestCommitHash">
    
    <Message Text="OSGroup                    - '$(OSGroup)'" Importance="High"/>
    <Message Text="TargetArchitecture         - '$(TargetArchitecture)'" Importance="High"/>
    <Message Text="Platform                   - '$(Platform)'" Importance="High"/>
    <Message Text="HostMachineRid             - '$(HostMachineRid)'" Importance="High"/>
    <Message Text="OutputRid                  - '$(OutputRid)'" Importance="High"/>
    <Message Text="TestTargetRid              - '$(TestTargetRid)'" Importance="High"/>
    <Message Text="BaseOutputPath             - '$(BaseOutputPath)''" Importance="High"/>
    <Message Text="OutputRootPath             - '$(OutputRootPath)''" Importance="High"/>
    <Message Text="OutputPath                 - '$(OutputPath)''" Importance="High"/>
    <Message Text="BaseIntermediateOutputPath - '$(BaseIntermediateOutputPath)''" Importance="High"/>
    <Message Text="IntermediateOutputRootPath - '$(IntermediateOutputRootPath)''" Importance="High"/>
    <Message Text="IntermediateOutputPath     - '$(IntermediateOutputPath)''" Importance="High"/>
    <Message Text="IncrementalNativeBuild     - '$(IncrementalNativeBuild)'" Importance="High"/>
    
    <!-- Generate Version files -->
    <ItemGroup>
      <HostFiles Include="dotnet">
       <FileDescription>.NET Core Host</FileDescription>
      </HostFiles>
      <HostFiles Include="hostfxr">
        <FileDescription>.NET Core Host Resolver - $(HostResolverVersion)</FileDescription>
      </HostFiles>
      <HostFiles Include="hostpolicy">
        <FileDescription>.NET Core Host Policy - $(HostPolicyVersion)</FileDescription>
      </HostFiles>
    </ItemGroup>

    <ItemGroup>
    </ItemGroup>
    
    <Message Importance="High" Text="MSBuildProjectFullPath: $(MSBuildProjectFullPath)" />
    <MSBuild Projects="$(MSBuildProjectFullPath)"
             Properties="FileDescription=%(HostFiles.FileDescription);NativeVersionFileDir=$(IntermediateOutputRootPath)hostResourceFiles\%(HostFiles.Identity);NativeVersionFile=$(IntermediateOutputRootPath)hostResourceFiles\%(HostFiles.Identity)\version_info.h"
             Targets="GenerateNativeVersionFile" 
             Condition="'$(IncrementalNativeBuild)' != 'true'"/>
    <PropertyGroup>
      <BuildArgs>$(ConfigurationGroup)</BuildArgs>
      <BuildArgs>$(BuildArgs) $(TargetArchitecture)</BuildArgs>
      <BuildArgs>$(BuildArgs) apphostver $(AppHostVersion)</BuildArgs>
      <BuildArgs>$(BuildArgs) hostver $(HostVersion)</BuildArgs>
      <BuildArgs>$(BuildArgs) fxrver $(HostResolverVersion)</BuildArgs>
      <BuildArgs>$(BuildArgs) policyver $(HostPolicyVersion)</BuildArgs>
      <BuildArgs>$(BuildArgs) commit $(LatestCommit)</BuildArgs>
      <BuildArgs>$(BuildArgs) rid $(OutputRid)</BuildArgs>
<!--
      <BuildArgs>$(BuildArgs) rootDir $(OutputRid)</BuildArgs>
-->      
      <BuildArgs>$(BuildArgs) binDir $(OutputRootPath)</BuildArgs>
      <BuildArgs>$(BuildArgs) interdir $(IntermediateOutputRootPath)</BuildArgs>
      
      <BuildArgs Condition="'$(PortableBuild)' == 'true'">$(BuildArgs) portable</BuildArgs>  
      <BuildArgs Condition="'$(IncrementalNativeBuild)' == 'true'">$(BuildArgs) incremental-native-build</BuildArgs>
      <CustomNativeToolsetDir Condition="'$(TargetArchitecture)' == 'arm64'"> toolsetdir $(NativeToolsetDir)</CustomNativeToolsetDir>      
    </PropertyGroup>

    <CallTarget Targets="CleanCMakeBuildDir" />

    <!-- Run script that invokes Cmake to create VS files, and then calls msbuild to compile them -->
    <Message Text="$(MSBuildProjectDirectory)\build.cmd $(BuildArgs)$(CustomNativeToolsetDir)" Importance="High"/>
    <Exec Command="$(MSBuildProjectDirectory)\build.cmd $(BuildArgs)$(CustomNativeToolsetDir)" />

    <ItemGroup>
      <CMakeOutput Include="$(CMakeBuildDir)cli\dotnet\$(ConfigurationGroup)\dotnet.exe" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\dotnet\$(ConfigurationGroup)\dotnet.pdb" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\apphost\$(ConfigurationGroup)\apphost.exe" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\apphost\$(ConfigurationGroup)\apphost.pdb" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\hostpolicy\$(ConfigurationGroup)\$(HostPolicyBaseName)" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\hostpolicy\$(ConfigurationGroup)\hostpolicy.pdb" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\fxr\$(ConfigurationGroup)\$(DotnetHostFxrBaseName)" />
      <CMakeOutput Include="$(CMakeBuildDir)cli\fxr\$(ConfigurationGroup)\hostfxr.pdb" />      
    </ItemGroup>
    
    <Copy SourceFiles="@(CMakeOutput)"
          DestinationFolder="$(CoreHostOutputDir)"/>
  </Target>
</Project>
